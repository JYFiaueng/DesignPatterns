2016年6月11日 09:55:42

装饰者模式（decorator）：可以动态的给某个对象添加一些额外的职责，而不会影响从这个类中派生的其他对象

装饰者模式将一个对象嵌入到另一个对象之中，实际上相当于一个对象被另一个对象包装起来，形成一条包装链，请求随着这条链一次传递到所有的对象，每个对象都有处理这条请求的机会。

代理模式和装饰者模式最重要的区别在于它们的意图和设计模式，代理模式的目的是当直接访问本体不方便或不符合需求时，为这个本体提供一个替代者，本体定义了关键功能，而代理提供或拒绝对他的访问，或者在访问本体之间做一些额外的事情，装饰者模式的作用是为对象动态的加入行为。

代理模式强调一种关系，这种关系可以静态表达，也就是说这种关系在一开始就是确定的，而装饰者模式用于一开始不能确定对象的全部功能时。